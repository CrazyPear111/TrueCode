// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrueCode.CurrencyService.Data;

#nullable disable

namespace TrueCode.CurrencyService.Data.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    partial class CurrencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrueCode.CurrencyService.Currencies.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric")
                        .HasColumnName("rate");

                    b.HasKey("Id")
                        .HasName("pk_currencies");

                    b.ToTable("currencies", (string)null);
                });

            modelBuilder.Entity("TrueCode.CurrencyService.Currencies.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("user_favorites", b =>
                {
                    b.Property<long>("FavoriteCurrenciesId")
                        .HasColumnType("bigint")
                        .HasColumnName("favorite_currencies_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("FavoriteCurrenciesId", "UserId")
                        .HasName("pk_user_favorites");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_favorites_user_id");

                    b.ToTable("user_favorites", (string)null);
                });

            modelBuilder.Entity("user_favorites", b =>
                {
                    b.HasOne("TrueCode.CurrencyService.Currencies.Currency", null)
                        .WithMany()
                        .HasForeignKey("FavoriteCurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_favorites_currencies_favorite_currencies_id");

                    b.HasOne("TrueCode.CurrencyService.Currencies.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_favorites_users_user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
